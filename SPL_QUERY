Stats SUM & AVG FILLNULL -----------


index="_internal" 
| table bytes, source, sourcetype
| stats sum(bytes) as sum_bytes, avg(bytes) as avg_bytes by sourcetype
| fillnull value="NULL" sum_bytes
| fillnull  avg_bytes
| sort  sourcetype


LIST & VALUES -----

index="_internal" 
| stats list(source) as source by sourcetype

index="_internal" 
| stats values(source) as source by sourcetype


EVAL - Round, Calculation & Concetination


index="_internal" 
| eval kb = bytes/1024
| eval kb_round = round(kb,3)
| eval kb_concat = kb_round." KB"
| table kb, kb_round,kb_concat, bytes

Optimized COde ---

index="_internal" 
```| eval kb = bytes/1024
| eval kb_round = round(kb,3)
| eval kb_concat = kb_round." KB"```
| eval kb_output = round(bytes/1024,2)." KB"
| table kb_output bytes

IF-ELSE Condition -----

index=vk_snow 
| dedup current_ticket_state
| table current_ticket_state
| eval ticket_state = if(current_ticket_state="Closed" OR current_ticket_state="Resolved", "Completed", "Incomplete")

CASE ----

index=vk_snow 
| dedup severity 
| table severity 
| eval sev = case( severity=1,"Critical", severity=2, "High", severity=3, "normal", 1=1, "Low")
| sort severity

Timechart ----

index=vk_snow 
|timechart span=1y count by current_ticket_state

Date & Time Function ----

index=vk_snow 
| table _time, current_ticket_state, time_submitted
| eval time_submitted_epoc = strptime(time_submitted,"%d-%m-%y %H:%M")
| eval _time = time_submitted_epoc
| timechart span=1y count by current_ticket_state

index="vk_snow" sourcetype="csv" 
| table time_submitted 
| eval time_submitted_epoc = strptime(time_submitted, "%d-%m-%y %H:%M") 
| eval time_submitted_format = strftime(time_submitted_epoc, "%d-%b-%Y %A")

GeoStats ----

index="vk_snow" sourcetype="csv" source="vendors.csv" | geostats latfield=VendorLatitude longfield=VendorLongitude count by VendorCountry

Join ----

Inner ---

index=vk_snow source=Sample_tickets.csv 
| table ticket_number, severity, current_ticket_state, time_taken 
| join type=inner ticket_number
    [ search index=vk_snow source=Sample_lookup.csv ticket_number=INC0000205* 
    | table ticket_number, time_taken]

index=vk_snow source=Sample_tickets.csv 
| table ticket_number, severity, current_ticket_state, time_taken 
| join type=left ticket_number
    [ search index=vk_snow source=Sample_lookup.csv ticket_number=INC0000205* 
    | table ticket_number, time_taken]

Overwrite Function ----

index=vk_snow source=Sample_tickets.csv 
| eval time_taken="NULL" 
| table ticket_number, severity, current_ticket_state, time_taken 
| join type=inner ticket_number overwrite=true
    [ search index=vk_snow source=Sample_lookup.csv ticket_number=INC0000205* 
    | table ticket_number, time_taken]


index=vk_snow source=Sample_tickets.csv 
| eval time_taken="NULL" 
| table ticket_number, severity, current_ticket_state, time_taken 
| join type=left ticket_number overwrite=true
    [ search index=vk_snow source=Sample_lookup.csv ticket_number=INC0000205* 
    | table ticket_number, time_taken]


append ---

index=vk_snow source=Sample_tickets.csv 
| stats count by current_ticket_state 
| append
    [ search index=vk_snow source=Sample_lookup.csv 
    | stats count as total by time_taken]

appendcols ---

index=vk_snow source=Sample_tickets.csv 
| stats count by current_ticket_state 
| appendcols 
    [ search index=vk_snow source=Sample_lookup.csv 
    | stats count as total by time_taken]

appendpipe ---

index="vk_snow" sourcetype="csv" source="Sample_tickets.csv" 
| stats count by severity, current_ticket_state 
| appendpipe 
    [| stats sum(count) as count by severity 
    | eval current_ticket_state="Sum by Severity Wise"] 
| sort severity

Rex ---

URL - https://www.debuggex.com/cheatsheet/regex/pcre
https://regex101.com/


source="data.txt"  index="vk_snow" sourcetype="vk_txt" 
| rex field=_raw "From:\s+<(?P<from_id>.*)>\s+To" 
| table from_id


| makeresults 
| eval text = "vk;search;saved_search" 
| rex field=text "(?P<name>\w+);(?P<app_name>\w+);(?P<savedsearchname>\w+)" 
| fields - _time

AddColtotal & Addtotal ----

index=vk_snow source="Sample_tickets.csv" 
| chart count by current_ticket_state, severity 
| addcoltotals label=total labelfield=current_ticket_state 
| addtotals fieldname=Sum

==============================================================================================================================

Assignment No - 2 -------------

Input ----

| makeresults 
| eval credit_card_number="1234-5678-9020-1415"

Output ---

credit_card_number
1234
5678
9020
1415

============================================================================================================================================

Solution Assignment - 2

| makeresults 
| eval credit_card_number="1234-5678-9020-1415" 
| rex field=credit_card_number "(?P<digit>\d{4})" max_match=0


Spath ----

index="vk_snow" sourcetype="vk_xml" source="test_xml.txt" 
| spath path=purchases.book.author output=author


index="vk_snow" sourcetype="vk_xml" source="test_xml.txt" 
| spath path=purchases.book.title output=title 
| spath path=purchases.book.author output=author 
| spath path=purchases.book.title{@yearPublished} output=yearPublished

index="vk_snow" sourcetype="vk_xml" source="raw_nyc_phil_mod.json" 
| spath path=programs{}.concerts{}.Venue output=venue
